// <auto-generated />
using System;
using MRT.CardManagement.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MRT.CardManagement.Persistence.Migrations
{
    [DbContext(typeof(CardManagementDbContext))]
    partial class CardManagementDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MRT.CardManagement.Domain.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Activated")
                        .HasColumnType("datetime2");

                    b.Property<int>("CardTypeId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiscountId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiscountIdType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LoadBalance")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CardTypeId");

                    b.ToTable("Card");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountNumber = "5555-1111-1111",
                            Activated = new DateTime(2022, 8, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            CardTypeId = 1,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpirationDate = new DateTime(2027, 8, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            LastModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LoadBalance = 100
                        },
                        new
                        {
                            Id = 2,
                            AccountNumber = "5555-2222-2222",
                            Activated = new DateTime(2022, 8, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            CardTypeId = 1,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpirationDate = new DateTime(2027, 8, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            LastModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LoadBalance = 100
                        },
                        new
                        {
                            Id = 3,
                            AccountNumber = "5555-3333-3333",
                            Activated = new DateTime(2022, 8, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            CardTypeId = 1,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpirationDate = new DateTime(2027, 8, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            LastModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LoadBalance = 100
                        },
                        new
                        {
                            Id = 4,
                            AccountNumber = "5555-4444-4444",
                            Activated = new DateTime(2022, 8, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            CardTypeId = 1,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpirationDate = new DateTime(2027, 8, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            LastModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LoadBalance = 100
                        },
                        new
                        {
                            Id = 5,
                            AccountNumber = "5555-5555-5555",
                            Activated = new DateTime(2022, 8, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            CardTypeId = 2,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountId = "11-1111-1111",
                            DiscountIdType = "Senior Citizen ID",
                            ExpirationDate = new DateTime(2025, 8, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            LastModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LoadBalance = 100
                        },
                        new
                        {
                            Id = 6,
                            AccountNumber = "5555-6666-6666",
                            Activated = new DateTime(2022, 8, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            CardTypeId = 2,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountId = "2222-2222-2222",
                            DiscountIdType = "Pwd ID",
                            ExpirationDate = new DateTime(2025, 8, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            LastModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LoadBalance = 100
                        },
                        new
                        {
                            Id = 7,
                            AccountNumber = "5555-7777-7777",
                            Activated = new DateTime(2022, 8, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            CardTypeId = 2,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountId = "33-3333-3333",
                            DiscountIdType = "Senior Citizen ID",
                            ExpirationDate = new DateTime(2025, 8, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            LastModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LoadBalance = 100
                        },
                        new
                        {
                            Id = 8,
                            AccountNumber = "5555-8888-8888",
                            Activated = new DateTime(2022, 8, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            CardTypeId = 2,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountId = "4444-4444-4444",
                            DiscountIdType = "Pwd ID",
                            ExpirationDate = new DateTime(2025, 8, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            LastModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LoadBalance = 100
                        });
                });

            modelBuilder.Entity("MRT.CardManagement.Domain.CardType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitialLoad")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Validity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CardType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Regular Card",
                            InitialLoad = 100,
                            LastModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Q-Less Transport Card",
                            Validity = 5
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Discount Card",
                            InitialLoad = 500,
                            LastModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Q-Less Discount Transport Card",
                            Validity = 3
                        });
                });

            modelBuilder.Entity("MRT.CardManagement.Domain.TransactionHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CardId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfTransaction")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.ToTable("TransactionHistory");
                });

            modelBuilder.Entity("MRT.CardManagement.Domain.Card", b =>
                {
                    b.HasOne("MRT.CardManagement.Domain.CardType", "CardType")
                        .WithMany()
                        .HasForeignKey("CardTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CardType");
                });

            modelBuilder.Entity("MRT.CardManagement.Domain.TransactionHistory", b =>
                {
                    b.HasOne("MRT.CardManagement.Domain.Card", "Card")
                        .WithMany()
                        .HasForeignKey("CardId");

                    b.Navigation("Card");
                });
#pragma warning restore 612, 618
        }
    }
}
